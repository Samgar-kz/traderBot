import asyncio
import threading
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext
from config import TELEGRAM_TOKEN
from trading_logic import trade_logic, stop_trading

trade_thread = None  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –ø–æ—Ç–æ–∫–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏

async def start(update: Update, context: CallbackContext):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global trade_thread

    if trade_thread and trade_thread.is_alive():
        await update.message.reply_text("‚ö† –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return

    trade_thread = threading.Thread(target=lambda: asyncio.run(trade_logic()), daemon=True)
    trade_thread.start()

    await update.message.reply_text("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞—á–∏–Ω–∞—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ä—ã–Ω–æ–∫!")

async def stop(update: Update, context: CallbackContext):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞"""
    global trade_thread

    if not trade_thread or not trade_thread.is_alive():
        await update.message.reply_text("‚ö† –ë–æ—Ç —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return

    await update.message.reply_text("‚ùå –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! (–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–¥–µ–ª–æ–∫...)")
    await stop_trading()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('stop', stop))
    application.run_polling()

if __name__ == '__main__':
    main()