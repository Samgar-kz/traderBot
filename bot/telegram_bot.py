import requests
import matplotlib.pyplot as plt
from io import BytesIO
from config import TELEGRAM_TOKEN, TELEGRAM_CHAT_ID

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
def send_telegram_message(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    data = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
    try:
        response = requests.post(url, data=data, timeout=5)
        response.raise_for_status()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –≤ Telegram
def send_telegram_photo(image_buffer: BytesIO, caption="üìä –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω—ã"):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendPhoto"
    data = {"chat_id": TELEGRAM_CHAT_ID, "caption": caption}
    files = {"photo": ("chart.png", image_buffer.getvalue(), "image/png")}
    
    try:
        response = requests.post(url, data=data, files=files, timeout=10)
        response.raise_for_status()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –≤ Telegram: {e}")

# ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Ü–µ–Ω
def send_price_chart(historical_data):
    """–°—Ç—Ä–æ–∏—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä."""
    
    if not historical_data:
        send_telegram_message("‚ö† –û—à–∏–±–∫–∞: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞!")
        return

    plt.figure(figsize=(10, 5))

    for pair, data in historical_data.items():
        try:
            timestamps = [entry[0] for entry in data]  # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
            prices = [entry[4] for entry in data]  # –ó–∞–∫—Ä—ã—Ç–∏–µ —Ü–µ–Ω—ã
            
            if len(prices) > 1:
                initial_price = float(prices[0])  
                normalized_prices = [(float(p) / initial_price - 1) * 100 for p in prices]
                plt.plot(timestamps, normalized_prices, label=pair)
        
        except (ValueError, IndexError, KeyError) as e:
            print(f"‚ö† –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è {pair}: {e}")
            continue

    plt.legend()
    plt.xlabel("–í—Ä–µ–º—è")
    plt.ylabel("–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã (%)")
    plt.title("üìä 30-–º–∏–Ω—É—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä—ã–Ω–∫–µ (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã)")
    plt.yscale("symlog")  # ‚úÖ –õ–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–∞—è —à–∫–∞–ª–∞

    # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ BytesIO –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
    img_buf = BytesIO()
    plt.savefig(img_buf, format="png")
    img_buf.seek(0)

    send_telegram_photo(img_buf, caption="üìä 30-–º–∏–Ω—É—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Ä—ã–Ω–∫–µ")
    plt.close()