import asyncio
from binance_api import get_price, get_trade_amount, place_order, get_top_liquid_pairs, trade_history
from telegram_bot import send_telegram_message
from config import CONFIG

is_running = False  

async def trade_logic():
    global is_running  
    send_telegram_message("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –Ω–∞—á–∞–ª—Å—è.")

    PAIRS = get_top_liquid_pairs(CONFIG["TOP_LIQUID_PAIRS"])  # –¢–µ–ø–µ—Ä—å –≤—ã–±–∏—Ä–∞–µ–º –ø–∞—Ä—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
    
    if not PAIRS:
        send_telegram_message("‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–∏–∫–≤–∏–¥–Ω—ã–µ –ø–∞—Ä—ã.")
        return  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–∞—Ä—ã
    
    last_prices = {pair: get_price(pair) for pair in PAIRS}
    highest_prices = last_prices.copy()
    entry_prices = {pair: None for pair in PAIRS}

    while is_running:
        try:
            for pair in PAIRS:
                current_price = get_price(pair)
                if current_price is None or pair not in last_prices:
                    continue

                price_change = (current_price - last_prices[pair]) / last_prices[pair] * 100

                # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Å—Ç–æ–ø-–ª–æ—Å—Å –∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏
                stop_loss_percent = CONFIG["STOP_LOSS_PERCENT"]
                take_profit_percent = CONFIG["SELL_RISE_PERCENT"]

                if pair in trade_history and "profit" in trade_history[pair]:
                    last_profit = trade_history[pair]["profit"]

                    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–µ–ª–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ–π, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–∏—Å–∫
                    if last_profit > 1:
                        stop_loss_percent *= 0.8  # –£–º–µ–Ω—å—à–∞–µ–º —Å—Ç–æ–ø-–ª–æ—Å—Å
                        take_profit_percent *= 1.2  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç
                    # –ï—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å–¥–µ–ª–∫–∞ –±—ã–ª–∞ —É–±—ã—Ç–æ—á–Ω–æ–π, —É–º–µ–Ω—å—à–∞–µ–º —Ä–∏—Å–∫
                    elif last_profit < -1:
                        stop_loss_percent *= 1.2
                        take_profit_percent *= 0.8

                # –ü–æ–∫—É–ø–∫–∞ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏
                if price_change <= -CONFIG["BUY_DROP_PERCENT"]:
                    amount = get_trade_amount(pair, CONFIG["BALANCE_PERCENT"])
                    if amount > 0:
                        send_telegram_message(f"üìâ {pair} —É–ø–∞–ª –Ω–∞ {price_change:.2f}%. –ü–æ–∫—É–ø–∞—é {amount}...")
                        place_order(pair, "buy", amount)
                        entry_prices[pair] = current_price
                        highest_prices[pair] = current_price

                # –ü—Ä–æ–¥–∞–∂–∞ –ø—Ä–∏ —Ä–æ—Å—Ç–µ
                elif price_change >= take_profit_percent:
                    amount = get_trade_amount(pair, CONFIG["BALANCE_PERCENT"])
                    if amount > 0:
                        send_telegram_message(f"üìà {pair} –≤—ã—Ä–æ—Å –Ω–∞ {price_change:.2f}%. –ü—Ä–æ–¥–∞—é {amount}...")
                        place_order(pair, "sell", amount)
                        entry_prices[pair] = None

                # –¢—Ä–µ–π–ª–∏–Ω–≥-—Å—Ç–æ–ø
                elif (highest_prices[pair] - current_price) / highest_prices[pair] * 100 >= CONFIG["TRAILING_STOP_PERCENT"]:
                    amount = get_trade_amount(pair, CONFIG["BALANCE_PERCENT"])
                    if amount > 0:
                        send_telegram_message(f"üîª {pair} –¥–æ—Å—Ç–∏–≥ –º–∞–∫—Å–∏–º—É–º–∞ –∏ —É–ø–∞–ª –Ω–∞ {CONFIG['TRAILING_STOP_PERCENT']}%. –ü—Ä–æ–¥–∞—é {amount}...")
                        place_order(pair, "sell", amount)
                        entry_prices[pair] = None

                # –°—Ç–æ–ø-–ª–æ—Å—Å
                elif entry_prices[pair] and (current_price - entry_prices[pair]) / entry_prices[pair] * 100 <= -stop_loss_percent:
                    amount = get_trade_amount(pair, CONFIG["BALANCE_PERCENT"])
                    if amount > 0:
                        send_telegram_message(f"‚õî {pair} —É–ø–∞–ª –Ω–∏–∂–µ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞ ({stop_loss_percent}%). –ó–∞–∫—Ä—ã–≤–∞—é –ø–æ–∑–∏—Ü–∏—é...")
                        place_order(pair, "sell", amount)
                        entry_prices[pair] = None

                # –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
                if current_price > highest_prices.get(pair, 0):
                    highest_prices[pair] = current_price

                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–µ–Ω—É
                last_prices[pair] = current_price

            await asyncio.sleep(60)

        except Exception as e:
            print(f"‚ö† –û—à–∏–±–∫–∞: {e}")
            send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
            await asyncio.sleep(30)